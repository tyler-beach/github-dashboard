# Build stage
FROM node:18-alpine as build

# Build arguments
ARG NODE_ENV=development
ARG VITE_GITHUB_CLIENT_ID
ARG VITE_GITHUB_CLIENT_SECRET
ARG VITE_GITHUB_REDIRECT_URI
ARG VITE_API_URL
ARG VITE_GITHUB_RATE_LIMIT
ARG VITE_APP_NAME

# Set environment variables
ENV NODE_ENV=$NODE_ENV
ENV VITE_GITHUB_CLIENT_ID=$VITE_GITHUB_CLIENT_ID
ENV VITE_GITHUB_CLIENT_SECRET=$VITE_GITHUB_CLIENT_SECRET
ENV VITE_GITHUB_REDIRECT_URI=$VITE_GITHUB_REDIRECT_URI
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_GITHUB_RATE_LIMIT=$VITE_GITHUB_RATE_LIMIT
ENV VITE_APP_NAME=$VITE_APP_NAME

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY yarn.lock ./

# Install dependencies
RUN yarn install

# Copy source code
COPY . .

# Build the application
RUN yarn build

# Production stage
FROM nginx:alpine

# Copy built assets from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create a script to replace environment variables at runtime
RUN echo "#!/bin/sh" > /docker-entrypoint.sh && \
    echo "envsubst '\$VITE_GITHUB_CLIENT_ID \$VITE_GITHUB_REDIRECT_URI \$VITE_API_URL \$VITE_APP_NAME' < /usr/share/nginx/html/index.html > /usr/share/nginx/html/index.html.tmp && mv /usr/share/nginx/html/index.html.tmp /usr/share/nginx/html/index.html" >> /docker-entrypoint.sh && \
    echo "nginx -g 'daemon off;'" >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# Expose port 80
EXPOSE 80

CMD ["/docker-entrypoint.sh"] 