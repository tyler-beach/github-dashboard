name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: write

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests with coverage
      run: npm run test:ci
      
    - name: Upload test coverage to GitHub
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  code-analysis:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint with GitHub annotations
      uses: github/super-linter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LINTER_RULES_PATH: /
        JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_TYPESCRIPT_ES: true
        VALIDATE_CSS: true
        FILTER_REGEX_INCLUDE: .*src/.*
    
    - name: Check for security vulnerabilities
      uses: github/codeql-action/analyze@v2
      with:
        languages: javascript

  build:
    runs-on: ubuntu-latest
    needs: [test, code-analysis]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/
        retention-days: 7

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.page_url }}
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build
        path: dist/
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: dist/
    
    - name: Deploy to GitHub Pages
      id: deploy
      uses: actions/deploy-pages@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }} 